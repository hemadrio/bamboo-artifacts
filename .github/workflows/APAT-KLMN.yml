name: KLMN Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_test_publish:
    runs-on: ubuntu-custom-runner
    env:
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AWS_REGION: us-east-1
      AWS_PROFILE: test-profile
      GOOGLE_APPLICATION_CREDENTIALS: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Azure CLI Script
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Run Azure CLI Script
        run: |
          #!/bin/bash
          REPLACE_WITH_ACTUAL_SCRIPT
        shell: bash

      - name: AWS CLI Configuration
        run: |
          aws configure set region $AWS_REGION
        shell: bash

      - name: Run AWS CLI Script
        run: |
          #!/bin/bash
          REPLACE_WITH_ACTUAL_SCRIPT
        shell: bash

      - name: Google Cloud CLI Authentication
        run: |
          gcloud auth activate-service-account --key-file="$GOOGLE_APPLICATION_CREDENTIALS"
        shell: bash

      - name: Run Google Cloud CLI Script
        run: |
          #!/bin/bash
          REPLACE_WITH_ACTUAL_SCRIPT
        shell: bash

  update_build_status:
    runs-on: ubuntu-custom-runner
    steps:
      - name: Update Build Status
        run: |
          curl -v POST "${{ secrets.GITHUB_WEBHOOK_URL }}" \
                --header 'Accept: application/vnd.github+json' \
                --header 'x-github-token: ${{ secrets.GITHUB_TOKEN }}' \
                --header 'Content-Type: application/json' \
                --data "{
                  \"event_type\": \"build_status\",
                  \"client_payload\": {
                    \"build_result_url\": \"https://bamboo.air-watch.com/browse/${{ github.run_id }}\",
                    \"context\": \"KLMN\",
                    \"commit_id\": \"${{ github.sha }}\",
                    \"build_status\": \"InProgress\",
                    \"build_plan_key\": \"APAT-KLMN\",
                    \"build_number\": \"${{ github.run_number }}\",
                    \"git_url\": \"${{ github.repository_url }}\"
                  }
                }"

  docker_artifacts:
    runs-on: ubuntu-custom-runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Build Docker Image
        run: |
          docker build -t my-complex-image:latest .

      - name: Save Docker Image
        run: |
          docker save my-complex-image:latest -o my-complex-image-latest.tar

      - name: Upload Docker Image Artifact
        uses: actions/upload-artifact@v4
        with:
          name: docker-image-artifact
          path: my-complex-image-latest.tar

  docker_shell:
    runs-on: ubuntu-custom-runner
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Docker Login
        run: |
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Docker Operations
        run: |
          #!/bin/bash
          REPLACE_WITH_ACTUAL_SCRIPT
        shell: bash

      - name: Docker Logout
        run: docker logout
