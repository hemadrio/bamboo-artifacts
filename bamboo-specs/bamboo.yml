version: 2
plan:
  project-key: APAT
  key: KLMN
  name: KLMN
  description: 'KLMN'
stages:
- Update Build Status to GitHub:
    manual: false
    final: false
    jobs:
    - Update build status
- Local Build:
    manual: false
    final: false
    jobs:
    - Build, Test and Publish Sonar and Code Coverage Report
- Docker Build:
    manual: false
    final: false
    jobs:
    - Build, Test Against Container and Publish Image
- Code Provenance:
    manual: false
    final: false
    jobs:
    - Code Provenance
Update build status:
  key: UBS
  tasks:
  - checkout:
      force-clean-build: 'false'
      description: Checkout Default Repository
  - script:
      interpreter: SHELL
      scripts:
      - |-
        curl -v POST "${bamboo.g_bamboo_github_webhook_url}" \
        --header 'Accept: application/vnd.github+json' \
        --header 'x-github-token: ${bamboo.g_svc_bot_ws1_github_token_secret}' \
        --header 'Content-Type: application/json' \
        --data "{
          \"event_type\": \"build_status\",
          \"client_payload\": {
            \"build_result_url\": \"https://bamboo.air-watch.com/browse/${bamboo.planKey}-${bamboo.buildNumber}\",
            \"context\": \"${bamboo.planName}\",
            \"commit_id\": \"${bamboo.planRepository.revision}\",
            \"build_status\": \"InProgress\",
            \"build_plan_key\": \"${bamboo.planKey}\",
            \"build_number\": \"${bamboo.buildNumber}\",
            \"git_url\": \"${bamboo.planRepository.repositoryUrl}\"
          }
        }"
      description: update build status
  requirements:
  - buildcluster: lnxbuild-atl
  artifact-subscriptions: []
Build, Test and Publish Sonar and Code Coverage Report:
  key: SJ
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        clover:
          useLocalLicenseKey: 'true'
          path: E:\agt01\AAFW-AWAFW-JOB1\test-results\
          integration: custom
          exists: 'false'
        buildHangingConfig.enabled: 'false'
        ncover.exists: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - inject-variables:
      file: bamboo-specs/environment_vars.env
      scope: RESULT
      namespace: inject
      description: Inject environment variables
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/docker_clean_rm.sh
      description: Docker Cleanup
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/lfs_pull.sh
      description: git lfs pull
  - script:
      interpreter: SHELL
      file: build.sh
      argument: --target=Default --runSonar=true  --should_publish_package=true --generateApiClient=true
      environment: ASPNETCORE_ENVIRONMENT=${bamboo.inject.ASPNETCORE_ENVIRONMENT} TEST_AGAINST_REMOTE=${bamboo.inject.TEST_AGAINST_REMOTE_FALSE} JAVA_HOME=${bamboo.capability.system.jdk.JDK-11-Zulu}
  final-tasks:
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/chown_directories.sh
      description: Chown Build Directory
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/docker_clean_rm.sh
      description: Docker Cleanup
  - any-task:
      plugin-key: com.atlassian.bamboo.plugin.dotnet:mstest
      configuration:
        mstestTestResultsDirectory: '**/test-results/*.trx'
        pickupOutdatedFiles: 'false'
      description: Tests
  artifacts:
  - name: Log Files
    pattern: '**/*.log'
    shared: false
    required: false
  - name: Build Artifacts
    location: artifacts
    pattern: '**/*.*'
    shared: true
    required: false
  - name: Build Artifacts PB
    location: build/artifacts
    pattern: '**/*.*'
    shared: true
    required: false
  - name: NuGet Packages PB
    location: build/artifacts/output
    pattern: '*.nupkg'
    shared: true
    required: false
  requirements:
  - buildcluster: lnxbuild-atl
  artifact-subscriptions: []
Build, Test Against Container and Publish Image:
  key: JOB1
  other:
    clean-working-dir: true
    all-other-apps:
      custom:
        clover:
          useLocalLicenseKey: 'true'
          path: E:\agt01\AAFW-AWAFW-JOB1\test-results\
          integration: custom
          exists: 'false'
        buildHangingConfig.enabled: 'false'
        ncover.exists: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - inject-variables:
      file: bamboo-specs/environment_vars.env
      scope: RESULT
      namespace: inject
      description: Inject environment variables
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/docker_clean_rm.sh
      description: Docker Cleanup
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/lfs_pull.sh
      description: git lfs pull
  - script:
      interpreter: SHELL
      file: build.sh
      argument: --target=DockerDefault --runSonar=false --publishDockerImage=true
      environment: ASPNETCORE_ENVIRONMENT=${bamboo.inject.ASPNETCORE_ENVIRONMENT} TEST_AGAINST_REMOTE=${bamboo.inject.TEST_AGAINST_REMOTE_TRUE} ARTIFACTORY_USERNAME=${bamboo.g_artifactory_uem_deployer_username} ARTIFACTORY_PASSWORD=${bamboo.g_artifactory_uem_deployer_apikey_secret}
      description: Run Cake Script
  - any-task:
      plugin-key: com.atlassian.bamboo.plugin.dotnet:mstest
      configuration:
        mstestTestResultsDirectory: '**/container-test-results/*.trx'
        pickupOutdatedFiles: 'false'
      description: Tests
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/create_services_artifact.sh
      description: Create Services Artifact
  final-tasks:
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/chown_directories.sh
      description: Chown Build Directory
  - script:
      interpreter: SHELL
      file: bamboo-specs/scripts/common/docker_clean_rm.sh
      description: Docker Cleanup
  artifacts:
  - name: Log Files
    pattern: '**/*.log'
    shared: false
    required: false
  - name: Tag
    pattern: tag.txt
    shared: false
    required: false
  - name: artifacts
    pattern: artifact_info*.json
    shared: true
    required: false
  - name: services-artifact
    pattern: services-artifact.zip
    shared: true
    required: true
  - name: Benchmark Artifacts
    location: artifacts/benchmark
    pattern: '**/*.*'
    shared: false
    required: false
  requirements:
  - buildcluster: lnxbuild-atl
  artifact-subscriptions: []
Code Provenance:
  key: CP
  other:
    clean-working-dir: true
    all-other-apps:
      custom.buildHangingConfig.enabled: 'false'
  tasks:
  - checkout:
      force-clean-build: 'true'
      description: Checkout Default Repository
  - checkout:
      repository: SRP Provenance-Github
      path: srp-tools
      force-clean-build: 'true'
      description: Checkout Default Repository
  - script:
      interpreter: BINSH_OR_CMDEXE
      file: Provenance.sh
      argument: '''${bamboo.shortPlanName}'' ${bamboo.buildKey} ${bamboo.buildNumber} ${bamboo.srp_client_id} ${bamboo.srp_client_secret} ${bamboo.planRepository.1.revision} ${bamboo.planRepository.1.branchName}'
      working-dir: srp-tools
      description: Run provenance
  requirements:
  - buildcluster: lnxbuild-atl
  artifact-subscriptions: []
variables:
  osspi_bid: '2277'
  osspi_product_version: main
  osspi_rid: '000'
repositories:
- UEM-android-management-service-Github:
    scope: global
- SRP Provenance-Github:
    scope: global
triggers:
- remote:
    repositories:
    - UEM-android-management-service-Github
branches:
  create: for-new-branch
  delete:
    after-deleted-days: 7
    after-inactive-days: 30
  link-to-jira: true
notifications:
- events:
  - plan-completed
  recipients:
  - webhook:
      name: GitHub Build Status Webhook Proxy - Prod
      url: http://bbs2gh.ssdevrd.com:3000/webhook
  - webhook:
      name: Airflow Prod
      url: http://ws1-build-36-61.vmware.com:8080/api/v1/dags/post_build_dag_example/dagRuns
labels: []
dependencies:
  require-all-stages-passing: false
  enabled-for-branches: true
  block-strategy: none
  plans:
  - MOD-USP
other:
  concurrent-build-plugin: system-default
  all-other-apps:
    custom.buildExpiryConfig:
      period: days
      enabled: 'true'
      duration: '7'
      expiryTypeResult: 'true'
      buildsToKeep: '3'
---
version: 2
plan:
  key: UEM-AMS
plan-permissions:
- users:
  - svc.releng-automation
  permissions:
  - view
  - edit
  - build
  - clone
  - admin
- users:
  - braceyd
  - prashanthr
  - wue
  - aanchliya
  - jadarsh
  permissions:
  - view
  - build
  - clone
- roles:
  - logged-in
  permissions:
  - view
